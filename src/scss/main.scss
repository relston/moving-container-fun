* { 
    transform-style: preserve-3d; 
    box-sizing: border-box;
}

:root {
    --max-size: 90;
    --target-size: 30;
    --unit: calc((var(--target-size)/var(--max-size)) * 1vmin);
    --perspective: 800;
    --rotate-x: 1;
    --rotate-y: 1;
    --vertical: 30;
    --x: 0;
    --y: 0;
    --z: 0;
    --transform-style: preserve-3d;
}
body {
    min-height: 100vh;
    overflow: hidden;
    background: hsl(0, 0%, 90%);
    font-family: sans-serif;
}

.scene {
    perspective: calc(var(--perspective, 800) * 1px);
    transform-style: var(--transform-style);
    height: 100vh;
    width: 100vw;
    display: flex;
    align-items: center;
    justify-content: center;
}

.plane {
    background: hsla(180, 50%, 50%, 0.5);
    height: calc(100 * var(--unit));
    width: calc(100 * var(--unit));
    transform-style: preserve-3d;
    transform: rotateX(calc(var(--rotate-x, -24) * -1deg)) 
               rotateY(calc(var(--rotate-y, -24) * -1deg)) 
               rotateX(90deg) 
               translate3d(
                   0, 
                   0, 
                   calc((var(--vertical) * -1) * var(--unit))
                   );
    transition: transform 0.25s ease;
}

.cuboid {
    --width: 80;
    --height: 94;
    --depth: 78;
    --rotate-x: 0;
    --rotate-y: 0;
    --rotate-z: 0;
    --x: 0;
    --y: 0;
    --z: 0;
    position: absolute;
    transform:  translate3d(calc(var(--x) * var(--unit)), calc(var(--y) * var(--unit)), calc(var(--z) * var(--unit))) 
                rotateX(calc(var(--rotate-x) * 1deg)) 
                rotateY(calc(var(--rotate-y) * 1deg)) 
                rotateZ(calc(var(--rotate-z) * 1deg));
    transform-style: var(--transform-style);
    
    &__side {
        transform-style: var(--transform-style);
    }
    
    & > div:nth-of-type(1) {
        height: calc(var(--height) * var(--unit));
        width: calc(var(--width) * var(--unit));
        position: absolute;
        transform:  translate(-50%, -50%)
                    rotateX(-90deg)
                    translate3d(
                        0, 
                        calc((var(--height) / -2) * var(--unit)), 
                        calc((var(--depth) / 2) * var(--unit))
                    );
                    
                    
    }
    & > div:nth-of-type(2) {
        height: calc(var(--height) * var(--unit));
        width: calc(var(--width) * var(--unit));
        position: absolute;
        transform:  translate(-50%, -50%) 
                    rotateX(-90deg) 
                    rotateY(180deg) 
                    translate3d(
                        0, 
                        calc((var(--height) / -2) * var(--unit)), 
                        calc((var(--depth) / 2) * var(--unit))
                    );
    }
    & > div:nth-of-type(3) {
        height: calc(var(--height) * var(--unit));
        width: calc(var(--depth) * var(--unit));
        position: absolute;
        transform:  translate(-50%, -50%) 
                    rotateX(-90deg) 
                    rotateY(90deg) 
                    translate3d(
                        0, 
                        calc((var(--height) / -2) * var(--unit)), 
                        calc((var(--width) / 2) * var(--unit))
                    );

    }
    & > div:nth-of-type(4) {
        height: calc(var(--height) * var(--unit));
        width: calc(var(--depth) * var(--unit));
        position: absolute;
        transform:  translate(-50%, -50%) 
                    rotateX(-90deg) 
                    rotateY(-90deg) 
                    translate3d(
                        0, 
                        calc((var(--height) / -2) * var(--unit)), 
                        calc((var(--width) / 2) * var(--unit))
                    );
    }
    
    & > div:nth-of-type(5) {
        height: calc(var(--depth) * var(--unit));
        width: calc(var(--width) * var(--unit));
        position: absolute;
        transform:  translate(-50%, -50%) 
                    translate3d(
                        0, 
                        0, 
                        calc(var(--height) * var(--unit))
                    );
    }
    
    & > div:nth-of-type(6) {
        height: calc(var(--depth) * var(--unit));
        width: calc(var(--width) * var(--unit));
        position: absolute;
        transform:  translate(-50%, -50%) 
                    rotateX(180deg)
    }
}

.cuboid .cuboid__side {
    background: hsla(90, 80%, 50%, 0.15);
    border: 0.1vmin solid #111;
    display: flex;
    justify-content: center;
    align-items: center;
}

.container {

}